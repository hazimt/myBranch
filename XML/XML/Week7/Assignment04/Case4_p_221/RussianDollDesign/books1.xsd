<?xml version="1.0" encoding="UTF-8"?>
<!--
   New Perspectives on XML
   Tutorial 4
   Case Problem 1

   Jazz Warehouse Vintage Albums Schema
   Author: Hazim Mohaisen
   Date:   05/30/2012

   Filename:         music.xsd
   Supporting Files: 
 
-->
<!-- Are lines 2 and 3 needed? -->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
             xmlns="http://mediamart.com/products/ns"
             targetNamespace="http://mediamart.com/products/ns"
             xmlns:bk="http://mediamart.com/books/ns"
             xmlns:mv="http://mediamart.com/movies/ns"
             xmlns:mu="http://mediamart.com/music/ns">

  <!-- definitions of simple types -->

  <!--to add pat:patients add this-->
  <!--namespace + schemalocation-->
  <xsd:import namespace="http://mediamart.com/movies/ns"
             schemaLocation="movies.xsd" />

  <!--namespace + schemalocation-->
  <xsd:import namespace="http://mediamart.com/music/ns"
             schemaLocation="music.xsd" />

  <xsd:element name="Media">
    <xsd:complexType>
      <xsd:sequence>

        <!-- Begin Books element -->
        <xsd:element name="books">
          <xsd:complexType>
            <xsd:sequence>

              <xsd:element name="book" minOccurs="1" maxOccurs="unbounded">
                <xsd:complexType>
                  <xsd:sequence>
                    <!-- Declare book elements -->
                    <xsd:element name="title" type="xsd:string"/>
                    <xsd:element name="author" type="xsd:string" minOccurs="1" maxOccurs="unbounded"/>
                  </xsd:sequence>
                  <!-- Declare book attributes -->
                  <xsd:attribute name="genre" use="required">
                    <!--Decalre the genre attribute -->
                    <xsd:simpleType>
                      <xsd:restriction base="xsd:string">
                        <xsd:enumeration value="Nonfiction"/>
                        <xsd:enumeration value="Fiction"/>
                        <xsd:enumeration value="Swing"/>
                        <xsd:enumeration value="Bebop"/>
                        <xsd:enumeration value="Modern"/>
                      </xsd:restriction>
                    </xsd:simpleType>
                  </xsd:attribute>

                  <xsd:attribute name="format" use="required">
                    <!--Declare the formatType custom type-->
                    <xsd:simpleType>
                      <xsd:restriction base="xsd:string">
                        <xsd:enumeration value="Hardcover"/>
                        <xsd:enumeration value="Paperback"/>
                      </xsd:restriction>
                    </xsd:simpleType>
                  </xsd:attribute>

                  <xsd:attribute name="price" use="required">
                    <!--Declare the priceType custom type-->
                    <xsd:simpleType>
                      <xsd:restriction base="xsd:string">
                        <!--http://docs.limesurvey.org/Using+regular+expressions&structure=Deutsche+Anleitung+f%C3%BCr+LimeSurvey-->
                        <!--(translation: from the beginning (^) match only numbers for however many there are, at least one, optionally followed by a group containing a decimal and two more numbers before the end of the string ($))-->
                        <!--^\$?\d+(\.(\d{2}))?$-->
                        <!--xsd:pattern value="^$[0-9]+(\.[0-9]{2})?$"/-->
                        <!--xsd:pattern value="^\$?\d+(\.(\d{2}))?$"/-->
                        <!--xsd:pattern value="^\$?\d{1,2}.\d{1,2}"/-->
                        <!-- This works in Visual Studio but NOT in Exchanger XML!!!!-->
                        <!--xsd:pattern value="^\$?\d{1,2}.\d{1,2}"/-->
                        <xsd:pattern value="[$]\d{1,2}.\d{1,2}"/>
                      </xsd:restriction>
                    </xsd:simpleType>

                  </xsd:attribute>
                </xsd:complexType>
              </xsd:element>

            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <!-- End Books element -->



      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

</xsd:schema>
