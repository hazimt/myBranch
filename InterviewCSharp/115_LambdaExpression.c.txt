
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;


//https://www.codegrepper.com/code-examples/objectivec/lambda+return+c%23

namespace TestCases
{

    public class lambdaExp
    {
        bool debug = false;

        private static int[] numbers; // = {1, 3, 5, 6, 7, 8};

        // public int[] numbers 
        // { 
        //     get
        //     {
        //         return numbers;
        //     }            
        //     set
        //     {
        //         numbers = value;
        //     }
        // } 


        //----------------------------------------------------------//
        //Original expression
         static bool IsEven(int num)
        {
            return num % 2 == 0;
        }

    }
    
    public class lambdaDriver
    {
        //Driver Function like main
        public void driverCall()
        {
            Console.WriteLine(" ............  ");
            Console.WriteLine(" ------------  ");

            // lambdaExp sn = new lambdaExp();

            // sn.hasEvenNumber();


            bool hasEvenNumber = Array.Exists(lambdaExp.numbers, 
                                            IsEven);
            //----------------------------------------------------------//
            //Lambda expression
            bool hasEvenNumber1 = Array.Exists(numbers, 
                                            (int num) => num % 2 == 0 );

            //Some code can be removed: 
            // - The modulo operator (%) is only used with numbers*/
            bool hasEvenNumber2 = Array.Exists(numbers, 
                                            (num) => num % 2 == 0 );

            // - just one parameter, we donâ€™t need the parentheses
            bool hasEvenNumbers = Array.Exists(numbers, 
                                            num => num % 2 == 0 );
            //----------------------------------------------------------//
            Console.ReadLine();             
        }
    }

}

